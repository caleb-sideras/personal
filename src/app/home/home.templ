package home

import (
	"fmt"
)

type HomeSection struct {
	Title       string
	Description string
	Section     int
	Cards       []HomeCard
	Id          string
	ImageVer    string
	ImageHor    string
}

templ (t Temp) Home(HomeCards []HomeCard, HomeSections []HomeSection) {
	<div
 		class="flex flex-col text-center justify-center items-center bg-surface-1 text-neutral-10 m-2 p-8 sm:p-32 rounded-3xl overflow-hidden bg-no-repeat bg-cover bg-audiover"
	>
		<svg class="mb-4" width="152" height="41" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path
 				d="M39.073 20.5c3.23 6.02.79 11.471-5.44 13.133-1.662 6.23-7.112 8.67-13.133 5.44-6.021 3.23-11.472.79-13.133-5.44-6.23-1.662-8.67-7.112-5.44-13.133-3.23-6.021-.79-11.472 5.44-13.133 1.661-6.23 7.112-8.67 13.133-5.44 6.02-3.23 11.471-.79 13.133 5.44 6.23 1.661 8.67 7.112 5.44 13.133zM61.524 35.476c-6.699-6.7-6.699-17.56 0-24.26l5.692-5.692c6.7-6.699 17.56-6.699 24.26 0 6.699 6.7 6.699 17.56 0 24.26l-5.692 5.692c-6.7 6.699-17.56 6.699-24.26 0zM128.707 2.384c1.455-2.512 5.131-2.512 6.586 0 .97 1.672 3.071 2.345 4.853 1.553 2.677-1.19 5.651.939 5.329 3.813-.214 1.915 1.085 3.676 3 4.067 2.874.587 4.011 4.03 2.035 6.17a3.693 3.693 0 000 5.026c1.976 2.14.839 5.583-2.035 6.17-1.915.391-3.214 2.152-3 4.067.322 2.874-2.652 5.003-5.329 3.813-1.782-.792-3.883-.12-4.853 1.553-1.455 2.512-5.131 2.512-6.586 0-.97-1.672-3.071-2.345-4.853-1.553-2.677 1.19-5.651-.939-5.329-3.813.214-1.915-1.085-3.676-3-4.067-2.874-.587-4.011-4.03-2.035-6.17a3.693 3.693 0 000-5.026c-1.976-2.14-.839-5.583 2.035-6.17 1.915-.391 3.214-2.152 3-4.067-.322-2.874 2.652-5.003 5.329-3.813 1.782.792 3.883.12 4.853-1.553z"
 				fill="var(--md-sys-color-secondary)"
			></path>
		</svg>
		<h1 class="text-6xl sm:text-8xl font-bold">GoX</h1>
		<div class="text-lg sm:text-2xl">Supercharge your Go and HTMX workflow</div>
		<div class="hidden lg:grid grid-cols-2 gap-2 w-full mt-16">
			for _, card := range HomeCards {
				@Suspense(LoadingSpinner()) {
					@Test(card)
				}
			}
		</div>
	</div>
	<div class="flex flex-col gap-2 lg:hidden w-full mt-10 px-2">
		for _, card := range HomeCards {
			@Suspense(LoadingSpinner()) {
				@Test(card)
			}
		}
	</div>
	<div class="lg:hidden my-20 lg:my-10">
		<svg class="m-auto" aria-hidden="true" width="155" height="9" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path
 				_ngcontent-fqc-c23=""
 				d="M1.5 4.5c5.067-4.667 10.133-4.667 15.2 0s10.133 4.667 15.2 0 10.133-4.667 15.2 0 10.133 4.667 15.2 0 10.133-4.667 15.2 0 10.133 4.667 15.2 0 10.133-4.667 15.2 0 10.133 4.667 15.2 0 10.133-4.667 15.2 0 10.133 4.667 15.2 0"
 				stroke="var(--md-sys-color-secondary)"
 				stroke-width="2"
 				stroke-linecap="round"
			></path>
		</svg>
	</div>
	<div x-data="{ section: 1 }" class="grid grid-cols-1 lg:grid-cols-2">
		<div class="lg:max-w-2xl w-full m-auto">
			for _, section := range HomeSections {
				@Suspense(LoadingSpinner()) {
					@Section(section, HomeCards)
				}
			}
		</div>
		<div class="hidden lg:grid w-full sticky top-0 h-[500px] lg:h-screen overflow-hidden">
			<div class="absolute py-4 pr-2 w-full h-full">
				for _, section := range HomeSections {
					<div
 						x-show={ alpineSectionChecker(section.Section) }
 						x-transition:enter="transition-opacity ease-in duration-300"
 						x-transition:enter-start="opacity-0"
 						x-transition:enter-end="opacity-100"
 						x-transition:leave="transition ease-in duration-300"
 						x-transition:leave-start="opacity-100"
 						x-transition:leave-end="opacity-0 "
 						class={ "bg-no-repeat bg-cover rounded-3xl w-full h-full bg-center", templ.SafeClass(section.ImageVer) }
					></div>
				}
			</div>
		</div>
	</div>
}

func formatImageString(imageURL string) string {
	tmp := "background-image: url(&#39;" + imageURL + "&#39;);"
	return tmp
}

func alpineSectionChecker(section int) string {
	return fmt.Sprintf("section == %d", section)
}
